name: 'Java SDK'

on:
    workflow_dispatch:
        inputs:
            action:
                description: 'Action'
                required: true
                default: 'none'
                type: choice
                options:
                    - none
                    - build
                    - test
                    - deploy
    push:
        branches: ['main']
        tags: ['sdk/highlight-java/**']
    pull_request:
        types: [opened, synchronize]
        paths:
            - 'sdk/highlight-java/**'
            - '.github/workflows/java-sdk.yml'
    merge_group:

permissions:
    checks: write

defaults:
    run:
        working-directory: ./sdk/highlight-java

jobs:
    setup:
        name: Setup
        runs-on: ubuntu-latest
        outputs:
            version: ${{ steps.version.outputs.version }}
            deploy: ${{ steps.deploy.outputs.running }}
            build: ${{ steps.build.outputs.running }}
            test: ${{ steps.test.outputs.running }}
        steps:
            - name: Checkout Code
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0

            - name: Is deploy running
              id: deploy
              env:
                GITHUB_EVENT_REF: ${{ startsWith(github.event.ref, 'refs/tags/sdk/highlight-java/') }}
                INPUTS_ACTION: ${{ inputs.action }}
              run: |
                  echo "running=$(if [ "$GITHUB_EVENT_REF" = "true" ] || [ "$INPUTS_ACTION" = "deploy" ]; then echo true; else echo false; fi)" >> "$GITHUB_OUTPUT"
                  echo "Is deploy running: $running"

            - name: Is build running
              id: build
              env:
                DEPLOY_RUNNING: ${{ needs.setup.build.running }}
                INPUTS_ACTION: ${{ inputs.action }}
              run: |
                  echo "running=$(if [ "$INPUTS_ACTION" != "test" ] || [ "$DEPLOY_RUNNING" == "true" ]; then echo true; else echo false; fi)" >> "$GITHUB_OUTPUT"
                  echo "Is build running: $running"

            - name: Is test running
              id: test
              env:
                DEPLOY_RUNNING: ${{ needs.setup.build.running }}
                INPUTS_ACTION: ${{ inputs.action }}
              run: |
                  echo "running=$(if [ "$INPUTS_ACTION" != "build" ] || [ "$DEPLOY_RUNNING" == "true" ]; then echo true; else echo false; fi)" >> "$GITHUB_OUTPUT"
                  echo "Is test running: $running"

            - name: Set build version
              id: version
              run: |
                  version=$(git describe --match "sdk/highlight-java/v*" --abbrev=0 --tags $(git rev-list --tags --max-count=1) | cut -d "v" -f2)
                  echo "version=$(if [ "$version" != "" ]; then echo $version; else echo "0.0.0"; fi )" >> "$GITHUB_OUTPUT"
                  echo "Build version: $version"

    build:
        name: Build
        runs-on: ubuntu-latest
        needs: setup
        if: ${{ needs.setup.build.running }}
        defaults:
            run:
                working-directory: ./sdk/highlight-java
        steps:
            - name: Checkout Code
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0

            - name: Set up JDK 17
              uses: actions/setup-java@v3
              with:
                  distribution: 'temurin'
                  java-version: 17

            - name: Build
              run: |
                  mvn clean package --batch-mode -DskipTests -Drevision=${{needs.setup.outputs.version}}-b$GITHUB_RUN_NUMBER
                  mv ./highlight-sdk/target/highlight-sdk-*.jar ./

            - name: Publish build artifacts
              uses: actions/upload-artifact@v3
              with:
                  name: highlight-java-sdk
                  path: ./sdk/highlight-java/highlight-sdk-*.jar

    test:
        name: Test
        runs-on: ubuntu-latest
        needs: setup
        if: ${{ needs.setup.test.running }}
        defaults:
            run:
                working-directory: ./sdk/highlight-java
        steps:
            - name: Checkout Code
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0

            - name: Set up JDK 17
              uses: actions/setup-java@v3
              with:
                  distribution: 'temurin'
                  java-version: 17

            - name: Test
              run: mvn clean test --batch-mode -Dmaven.test.failure.ignore=true -Drevision=${{needs.setup.outputs.version}}-b$GITHUB_RUN_NUMBER

            - name: Upload Test Report
              uses: actions/upload-artifact@v3
              if: always()
              with:
                  name: junit-test-results
                  path: '**/target/surefire-reports/TEST-*.xml'
                  retention-days: 1

            - name: Publish Test Report
              uses: mikepenz/action-junit-report@v3
              with:
                  commit: ${{github.event.workflow_run.head_sha}}
                  report_paths: '**/target/surefire-reports/TEST-*.xml'

    deploy:
        name: Deploy
        runs-on: ubuntu-latest
        needs: [setup, build, test]
        if: ${{ needs.setup.deploy.running }}
        defaults:
            run:
                working-directory: ./sdk/highlight-java
        steps:
            - name: Checkout Code
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0

            - name: Set up JDK 17
              uses: actions/setup-java@v3
              with:
                  distribution: 'temurin'
                  java-version: 17
                  server-id: ossrh
                  server-username: MAVEN_USERNAME
                  server-password: MAVEN_PASSWORD
                  gpg-private-key: ${{ secrets.OSSRH_GPG_SECRET_KEY }}
                  gpg-passphrase: MAVEN_GPG_PASSPHRASE

            - name: Publish to the Maven Central Repository
              run: mvn clean deploy --batch-mode --no-transfer-progress -Drevision=${{needs.setup.outputs.version}}
              env:
                  MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
                  MAVEN_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
                  MAVEN_GPG_PASSPHRASE: ${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}
